렌더 파이프라인, 빌트인이 기본이라고 함
패키지 중 빌트인을 씌 못하는 경우에는 렌더 파이프를 다른 걸로 다운해줘야 함

프로젝트 및 파일 이름 영어로, 한글하면 오류날 가능성 높음

환경 설정에서 프로젝트 파일 저장 위치 한 번에 지정할 수 있음


[프로젝트 초반 설정]
(Edit - Preferences)
언어 바꾸기
일반 - 영숫자 정렬 활성화
컬러 - Playmode tint(게임 시작 시 바뀌는 색)
외부 툴 - 외부 스크립트 에디터(현재 사용하고 있는 스크립트 에디터로 바꾸기)

Scene View - 원점에 오브젝트 생성(어떤 오브젝트던지 원점에 생성됨)


왜 스크립트 에디터로 Visual Studio를 사용하는가?
(스크립트 에디터, 메모장 한컴 등)
(컴파일(기계어로 바꾸는 것)을 편하게 해줌, 다른 문법 프로그램(C++, JAVA) 등도 바로 컴파일 시켜줌)
(에러가 나도 어디 에러인지 모르지만 VIsual Studio는 상세하게 알려줌)
(색상으로 클래스 등 문법을 구분해줌)

VIisual Studio는 구매를 해야하는데 Community는 일부 기능 무료로 이용 가능함
(스크랩트는 짧은 것을 지칭함 C# Script 등)
(프로그래밍 중 긴 스크립트를 작성하는 걸 프로그래머, 코더는 단순 작업하는 것으로 불렀다고 함)
(Visual Studio와 Community는 서로 문법은 같은데 구동 방식이 달라 유니티 내에서 초반 프로젝트 진행 시 연동을 해야 한다고 함)


Visual Studio Community에서 유니티와 서로 연결되어 있으면 위에 툴창에 Unity에 연결 표시가 뜸
(디버그 항목에서도 볼 수 있음)
(만약에 되지 않는다면 Visual Studio Installer로 수정 항목 들어가서 유니티 체크 박스 표시하면 됨)


[Github Repository 이용법]
(들어가서 New)
Public으로 하면 모두 확인 가능
Add a README file 체크

Github는 파일 만드는 기능이 없고 Repository는 저장소이기 때문에 텍스트 파일 폴더를 만들고 파일을 만듦
(Add file - Create new file - Name your file에 이름 적고 '/' 누르면 계속 생성 가능함)

파일을 지우려면 지우려는 파일 들어가서 중간 즘에 휴지통 버튼 누르고 Commit changes 누르면 됨









